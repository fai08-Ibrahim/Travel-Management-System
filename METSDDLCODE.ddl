-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-04-17 15:31:00 EEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g


-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE DATABASE METS;
USE METS;

CREATE TABLE activity (
    Activity_Name   VARCHAR(40) NOT NULL,
    category          VARCHAR(20) NOT NULL,
    schedule          VARCHAR(40) NOT NULL,
    accessibility     VARCHAR(30) NOT NULL,
    Booking_info    VARCHAR(40) NOT NULL,
    Safety_Measures VARCHAR(100)
);

ALTER TABLE activity ADD CONSTRAINT activity_pk PRIMARY KEY ( Activity_Name );

CREATE TABLE booking (
    tourist_id    INT NOT NULL,
    trip_trip_num INT NOT NULL
);

ALTER TABLE booking ADD CONSTRAINT booking_pk PRIMARY KEY ( tourist_id,
                                                            trip_trip_num );

CREATE TABLE city (
    City_name       VARCHAR(40) NOT NULL,
    Avg_temperature FLOAT NOT NULL,
    description       VARCHAR(100) NOT NULL,
    country_name      VARCHAR(40) NOT NULL
);

ALTER TABLE city ADD CONSTRAINT city_pk PRIMARY KEY ( City_name );

CREATE TABLE company (
    id INT NOT NULL
);

ALTER TABLE company ADD CONSTRAINT company_pk PRIMARY KEY ( id );

CREATE TABLE country (
    name         VARCHAR(40) NOT NULL,
    weather      VARCHAR(20) NOT NULL,
    laws         VARCHAR(100) NOT NULL,
    currency     VARCHAR(40) NOT NULL,
    Famous_for VARCHAR(100) NOT NULL
);

ALTER TABLE country ADD CONSTRAINT country_pk PRIMARY KEY ( name );

CREATE TABLE Estimate_Cost (
    Estimate_Cost_ID INT NOT NULL AUTO_INCREMENT,
    transportation     FLOAT NOT NULL,
    accommodation      FLOAT NOT NULL,
    food               FLOAT NOT NULL,
    activities         FLOAT NOT NULL,
    total              FLOAT NOT NULL,
    PRIMARY KEY (Estimate_Cost_ID)
);


CREATE TABLE guide (
    id              INT NOT NULL,
    name            VARCHAR(20) NOT NULL,
    contact_info    VARCHAR(30) NOT NULL,
    office_location VARCHAR(30) NOT NULL,
    availability    VARCHAR(30) NOT NULL
);

ALTER TABLE guide ADD CONSTRAINT guide_pk PRIMARY KEY ( id );

CREATE TABLE has (
    Estimate_Cost_Estimate_Cost_ID INT NOT NULL,
    country_name   VARCHAR(40) NOT NULL
);

ALTER TABLE has ADD CONSTRAINT has_pk PRIMARY KEY ( Estimate_Cost_Estimate_Cost_ID,
                                                    country_name );

CREATE TABLE item (
    name             VARCHAR(20) NOT NULL,
    Priority_level VARCHAR(10) NOT NULL,
    availability     VARCHAR(20) NOT NULL
);

ALTER TABLE item ADD CONSTRAINT item_pk PRIMARY KEY ( name );

CREATE TABLE Locale_event (
    name        VARCHAR(40) NOT NULL,
    duration    VARCHAR(20) NOT NULL,
    description VARCHAR(100) NOT NULL,
    Date      DATE NOT NULL,
    host        VARCHAR(40) NOT NULL,
    fees        FLOAT NOT NULL
);

ALTER TABLE Locale_event ADD CONSTRAINT Locale_event_PK PRIMARY KEY ( name );

CREATE TABLE Occure_in (
    Locale_event_Name VARCHAR(40) NOT NULL,
    City_City_name    VARCHAR(40) NOT NULL
);

ALTER TABLE Occure_in ADD CONSTRAINT Occure_in_PK PRIMARY KEY ( Locale_event_Name,
                                                                    City_City_name );

CREATE TABLE person (
    id INT NOT NULL
);

ALTER TABLE person ADD CONSTRAINT person_pk PRIMARY KEY ( id );

CREATE TABLE requires (
    item_name     VARCHAR(20) NOT NULL,
    activity_name VARCHAR(40) NOT NULL
);

ALTER TABLE requires ADD CONSTRAINT requires_pk PRIMARY KEY ( item_name,
                                                              activity_name );

CREATE TABLE review (
    rating     FLOAT NOT NULL,
    response   VARCHAR(100) NOT NULL,
    feedback   VARCHAR(100) NOT NULL,
    Date     DATE NOT NULL,
    guide_id   INT NOT NULL,
    tourist_id INT NOT NULL
);

CREATE TABLE tourist (
    id         INT NOT NULL,
    first_name VARCHAR(20) NOT NULL,
    last_name  VARCHAR(20) NOT NULL,
    username   VARCHAR(20) NOT NULL,
    password   VARCHAR(20) NOT NULL,
    adress     VARCHAR(40) NOT NULL
);

ALTER TABLE tourist ADD CONSTRAINT tourist_pk PRIMARY KEY ( id );

CREATE TABLE trip (
    trip_num           INT NOT NULL,
    num_passengers     INT NOT NULL,
    transportation     VARCHAR(40) NOT NULL,
    duration           INT NOT NULL,
    Date             DATE NOT NULL,
    departure_time     INT NOT NULL,
    departure_location VARCHAR(30) NOT NULL,
    guide_id           INT NOT NULL
);

ALTER TABLE trip ADD CONSTRAINT trip_pk PRIMARY KEY ( trip_num );

ALTER TABLE booking
    ADD CONSTRAINT booking_tourist_fk FOREIGN KEY ( tourist_id )
        REFERENCES tourist ( id );

ALTER TABLE booking
    ADD CONSTRAINT booking_trip_fk FOREIGN KEY ( trip_trip_num )
        REFERENCES trip ( trip_num );

ALTER TABLE city
    ADD CONSTRAINT city_country_fk FOREIGN KEY ( country_name )
        REFERENCES country ( name );

ALTER TABLE company
    ADD CONSTRAINT company_guide_fk FOREIGN KEY ( id )
        REFERENCES guide ( id );

ALTER TABLE has
    ADD CONSTRAINT has_country_fk FOREIGN KEY ( country_name )
        REFERENCES country ( name );

ALTER TABLE has
    ADD CONSTRAINT Has_Estimate_Cost_FK FOREIGN KEY ( Estimate_Cost_Estimate_Cost_ID )
        REFERENCES Estimate_Cost ( Estimate_Cost_ID );

ALTER TABLE Locale_event
    ADD CONSTRAINT Locale_event_City_FK FOREIGN KEY ( name )
        REFERENCES city ( City_name )
            ON DELETE CASCADE;

ALTER TABLE Occure_in
    ADD CONSTRAINT Occure_in_City_FK FOREIGN KEY ( City_City_name )
        REFERENCES city ( City_name );

ALTER TABLE Occure_in
    ADD CONSTRAINT Occure_in_Locale_event_FK FOREIGN KEY ( Locale_event_Name )
        REFERENCES Locale_event ( name );

ALTER TABLE person
    ADD CONSTRAINT person_guide_fk FOREIGN KEY ( id )
        REFERENCES guide ( id );

ALTER TABLE requires
    ADD CONSTRAINT requires_activity_fk FOREIGN KEY ( activity_name )
        REFERENCES activity ( Activity_Name );

ALTER TABLE requires
    ADD CONSTRAINT requires_item_fk FOREIGN KEY ( item_name )
        REFERENCES item ( name );

ALTER TABLE review
    ADD CONSTRAINT review_guide_fk FOREIGN KEY ( guide_id )
        REFERENCES guide ( id );

ALTER TABLE review
    ADD CONSTRAINT review_tourist_fk FOREIGN KEY ( tourist_id )
        REFERENCES tourist ( id );

ALTER TABLE trip
    ADD CONSTRAINT trip_guide_fk FOREIGN KEY (guide_id)
        REFERENCES guide (id);

-- Creating a sequence with a consistent naming convention

DELIMITER ;

INSERT INTO country (name, weather, laws, currency, Famous_for)
VALUES
('France', 'Varied', 'Strict environmental laws', 'Euro', 'Wine and art'),
('Japan', 'Humid', 'Strict immigration control', 'Yen', 'Technology and anime');

INSERT INTO city (City_name, Avg_temperature, description, country_name)
VALUES
('Paris', 16.7, 'Capital city of France, known for its art, fashion, and gastronomy.', 'France'),
('Tokyo', 15.6, 'Capital of Japan, known for its tower and contemporary architecture.', 'Japan');

-- INSERT INTO Estimate_Cost (Estimate_Cost_ID, transportation, accomodation, food, activities, total)
-- VALUES
-- (1, 150.00, 300.00, 200.00, 150.00, 800.00),
-- (2, 100.00, 500.00, 250.00, 100.00, 950.00);

-- INSERT INTO has (Estimate_Cost_Estimate_Cost_ID, country_name)
-- VALUES
-- (1, 'France'),
-- (2, 'Japan');

INSERT INTO guide (id, name, contact_info, office_location, availability)
VALUES
(1, 'John Doe', 'john.doe@example.com', '1234 River St, Paris', 'Weekdays'),
(2, 'Akira Yama', 'akira.yama@example.com', '5678 Forest Rd, Tokyo', 'Weekends');

INSERT INTO activity (Activity_Name, category, schedule, accessibility, Booking_info, Safety_Measures)
VALUES
('Eiffel Tower Visit', 'Tourism', 'Morning', 'High', 'Book online', 'Follow safety guidelines'),
('Anime Expo', 'Event', 'All Day', 'Medium', 'Get tickets at gate', 'Emergency services available');

INSERT INTO tourist (id, first_name, last_name, username, password, adress)
VALUES
(1, 'Alice', 'Smith', 'asmith', 'pass123', '123 Apple St'),
(2, 'Bob', 'Jones', 'bjones', 'pass456', '456 Orange St');

INSERT INTO trip (trip_num, num_passengers, transportation, duration, Date, departure_time, departure_location, guide_id)
VALUES
(101, 4, 'Bus', 2, '2024-04-20', 8, 'Central Station', 1),
(102, 2, 'Train', 3, '2024-04-22', 9, 'North Station', 2);

INSERT INTO booking (tourist_id, trip_trip_num)
VALUES
(1, 101),
(2, 102);

INSERT INTO review (rating, response, feedback, Date, guide_id, tourist_id)
VALUES
(4.5, 'Great experience', 'John was very informative', '2024-04-20', 1, 1),
(4.0, 'Enjoyable trip', 'Akira was friendly', '2024-04-22', 2, 2);

SELECT * FROM country;
SELECT name, weather FROM country;
SELECT * FROM city WHERE country_name = 'France';
SELECT * FROM country ORDER BY name ASC;
SELECT * FROM tourist LIMIT 5;
SELECT tourist.first_name, tourist.last_name, trip.trip_num
FROM tourist
JOIN booking ON tourist.id = booking.tourist_id
JOIN trip ON booking.trip_trip_num = trip.trip_num;

-- drop database mets;
